@if (Pagination != null)
{
    <div class="d-flex fixed-bottom m-1 justify-content-between">
        <div></div>
        <div>
            @if (Pagination.PageCount > 1)
            {
                <button class="btn btn-outline-dark text-bold" @onclick="@(()=>Apply(1))">1</button>
                <label>...</label>
                <button class="btn btn-outline-dark text-bold" @onclick="@(()=>Apply(Pagination.
                    PreviousPage))"><i class="fa fa-chevron-left" aria-hidden="true"></i></button>
                <button class="btn btn-outline-dark text-bold active">@Pagination.CurrentPage</button>
                <button class="btn btn-outline-dark text-bold" @onclick="@(()=>Apply(Pagination.NextPage))"><i class="fa fa-chevron-right" aria-hidden="true"></i></button>
                <label>...</label>
                <button class="btn btn-outline-dark text-bold" @onclick="@(()=>Apply(Pagination.PageCount))">@Pagination.PageCount</button>
            }
        </div>
        <div>
            <button class="btn btn-facebook text-bold pull-right">Lista completa: &nbsp; @Pagination.TotalItems &nbsp; produtos</button>
        </div>
    </div>
}

@code {
    [Parameter]
    public Pagination? Pagination { get; set; }

    [Parameter]
    public EventCallback<int?> Reload { get; set; }

    public async Task Apply(int pageNumber)
    {
        Pagination.CurrentPage = pageNumber;
        await Reload.InvokeAsync(Pagination.CurrentPage);
        await InvokeAsync(StateHasChanged);
        await Task.Delay(1);
    }
}
